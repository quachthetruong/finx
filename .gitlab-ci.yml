variables:
  REGISTRY_NAMESPACE: g2
  REGISTRY_IMAGE: $PRIVATE_REGISTRY/$REGISTRY_NAMESPACE/financing-offer-api
  KANIKO_CACHE_ARGS: "--cache=true"

stages:
  - test
  - code-quality
  - build
  - docker-build

build:
  image: golang:1.22.2-bookworm
  stage: build
  only:
    - uat
    - main
    - tags

  script:
    # Set up environment and download dependencies
    - apt-get update && apt-get install -y --no-install-recommends ca-certificates git openssh-client build-essential
    - git config --global url."git@gitlab.com:".insteadOf "https://gitlab.com/"
    - mkdir ~/.ssh/ && echo "${GITLAB_PRIVATE_KEY}" > ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
    - ssh-keyscan -t rsa gitlab.com > ~/.ssh/known_hosts
    - export GONOSUMDB="gitlab.com/enCapital"
    - go mod download

    # build binary
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -tags netgo -ldflags '-w -extldflags "-static"' -o server ./cmd/server

  artifacts:
    paths:
      - server

go-test:
  stage: test
  image: golang:1.22.2-bookworm
  only:
    - branches
    - merge_requests
  services:
    - docker:dind
  variables:
    # Instruct test containers to use the daemon of DinD, use port 2375 for non-tls connections.
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    # Set up environment and download dependencies
    - apt-get update && apt-get install -y --no-install-recommends ca-certificates git openssh-client build-essential
    - git config --global url."git@gitlab.com:".insteadOf "https://gitlab.com/"
    - mkdir ~/.ssh/ && echo "${GITLAB_PRIVATE_KEY}" > ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
    - ssh-keyscan -t rsa gitlab.com > ~/.ssh/known_hosts
    - go mod download

    # run tests
    - go test -coverpkg=./... -coverprofile=coverage.out ./... ;  go tool cover -func=coverage.out

  artifacts:
    paths:
      - coverage.out

sonarcloud-check:
  stage: code-quality
  image:
    name: sonarsource/sonar-scanner-cli:5.0.1
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - branches
  variables:
    SONAR_TOKEN: $SONAR_TOKEN
    SONAR_HOST_URL: https://sonarcloud.io
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task

.docker-build:
  stage: docker-build
  image:
    name: registry.entrade.com.vn/public/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "" ]
  script:
    - mkdir -p /kaniko/.docker
    - echo $KANIKO_AUTH > /kaniko/.docker/config.json
    - if [ "$CI_COMMIT_REF_NAME" = "$CI_COMMIT_TAG" ]; then TAG="$CI_COMMIT_TAG"; else TAG="$CI_COMMIT_SHA"; fi
    - /kaniko/executor $KANIKO_CACHE_ARGS --context $CI_PROJECT_DIR --destination $REGISTRY_IMAGE:${TAG}

build dev:
  extends: .docker-build
  only:
    - ci
    - uat

build prod:
  extends: .docker-build
  only:
    - tags
