//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var LoanPackageOffer = newLoanPackageOfferTable("public", "loan_package_offer", "")

type loanPackageOfferTable struct {
	postgres.Table

	// Columns
	ID                   postgres.ColumnInteger
	LoanPackageRequestID postgres.ColumnInteger
	OfferedBy            postgres.ColumnString
	CreatedAt            postgres.ColumnTimestamp
	UpdatedAt            postgres.ColumnTimestamp
	ExpiredAt            postgres.ColumnTimestamp
	FlowType             postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type LoanPackageOfferTable struct {
	loanPackageOfferTable

	EXCLUDED loanPackageOfferTable
}

// AS creates new LoanPackageOfferTable with assigned alias
func (a LoanPackageOfferTable) AS(alias string) *LoanPackageOfferTable {
	return newLoanPackageOfferTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LoanPackageOfferTable with assigned schema name
func (a LoanPackageOfferTable) FromSchema(schemaName string) *LoanPackageOfferTable {
	return newLoanPackageOfferTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LoanPackageOfferTable with assigned table prefix
func (a LoanPackageOfferTable) WithPrefix(prefix string) *LoanPackageOfferTable {
	return newLoanPackageOfferTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LoanPackageOfferTable with assigned table suffix
func (a LoanPackageOfferTable) WithSuffix(suffix string) *LoanPackageOfferTable {
	return newLoanPackageOfferTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLoanPackageOfferTable(schemaName, tableName, alias string) *LoanPackageOfferTable {
	return &LoanPackageOfferTable{
		loanPackageOfferTable: newLoanPackageOfferTableImpl(schemaName, tableName, alias),
		EXCLUDED:              newLoanPackageOfferTableImpl("", "excluded", ""),
	}
}

func newLoanPackageOfferTableImpl(schemaName, tableName, alias string) loanPackageOfferTable {
	var (
		IDColumn                   = postgres.IntegerColumn("id")
		LoanPackageRequestIDColumn = postgres.IntegerColumn("loan_package_request_id")
		OfferedByColumn            = postgres.StringColumn("offered_by")
		CreatedAtColumn            = postgres.TimestampColumn("created_at")
		UpdatedAtColumn            = postgres.TimestampColumn("updated_at")
		ExpiredAtColumn            = postgres.TimestampColumn("expired_at")
		FlowTypeColumn             = postgres.StringColumn("flow_type")
		allColumns                 = postgres.ColumnList{IDColumn, LoanPackageRequestIDColumn, OfferedByColumn, CreatedAtColumn, UpdatedAtColumn, ExpiredAtColumn, FlowTypeColumn}
		mutableColumns             = postgres.ColumnList{LoanPackageRequestIDColumn, OfferedByColumn, ExpiredAtColumn, FlowTypeColumn}
	)

	return loanPackageOfferTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                   IDColumn,
		LoanPackageRequestID: LoanPackageRequestIDColumn,
		OfferedBy:            OfferedByColumn,
		CreatedAt:            CreatedAtColumn,
		UpdatedAt:            UpdatedAtColumn,
		ExpiredAt:            ExpiredAtColumn,
		FlowType:             FlowTypeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
