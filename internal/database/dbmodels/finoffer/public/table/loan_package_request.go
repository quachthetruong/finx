//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var LoanPackageRequest = newLoanPackageRequestTable("public", "loan_package_request", "")

type loanPackageRequestTable struct {
	postgres.Table

	// Columns
	ID                 postgres.ColumnInteger
	SymbolID           postgres.ColumnInteger
	InvestorID         postgres.ColumnString
	AccountNo          postgres.ColumnString
	LoanRate           postgres.ColumnFloat
	LimitAmount        postgres.ColumnFloat
	Type               postgres.ColumnString
	Status             postgres.ColumnString
	CreatedAt          postgres.ColumnTimestamp
	UpdatedAt          postgres.ColumnTimestamp
	GuaranteedDuration postgres.ColumnInteger
	AssetType          postgres.ColumnString
	InitialRate        postgres.ColumnFloat
	ContractSize       postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type LoanPackageRequestTable struct {
	loanPackageRequestTable

	EXCLUDED loanPackageRequestTable
}

// AS creates new LoanPackageRequestTable with assigned alias
func (a LoanPackageRequestTable) AS(alias string) *LoanPackageRequestTable {
	return newLoanPackageRequestTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LoanPackageRequestTable with assigned schema name
func (a LoanPackageRequestTable) FromSchema(schemaName string) *LoanPackageRequestTable {
	return newLoanPackageRequestTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LoanPackageRequestTable with assigned table prefix
func (a LoanPackageRequestTable) WithPrefix(prefix string) *LoanPackageRequestTable {
	return newLoanPackageRequestTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LoanPackageRequestTable with assigned table suffix
func (a LoanPackageRequestTable) WithSuffix(suffix string) *LoanPackageRequestTable {
	return newLoanPackageRequestTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLoanPackageRequestTable(schemaName, tableName, alias string) *LoanPackageRequestTable {
	return &LoanPackageRequestTable{
		loanPackageRequestTable: newLoanPackageRequestTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newLoanPackageRequestTableImpl("", "excluded", ""),
	}
}

func newLoanPackageRequestTableImpl(schemaName, tableName, alias string) loanPackageRequestTable {
	var (
		IDColumn                 = postgres.IntegerColumn("id")
		SymbolIDColumn           = postgres.IntegerColumn("symbol_id")
		InvestorIDColumn         = postgres.StringColumn("investor_id")
		AccountNoColumn          = postgres.StringColumn("account_no")
		LoanRateColumn           = postgres.FloatColumn("loan_rate")
		LimitAmountColumn        = postgres.FloatColumn("limit_amount")
		TypeColumn               = postgres.StringColumn("type")
		StatusColumn             = postgres.StringColumn("status")
		CreatedAtColumn          = postgres.TimestampColumn("created_at")
		UpdatedAtColumn          = postgres.TimestampColumn("updated_at")
		GuaranteedDurationColumn = postgres.IntegerColumn("guaranteed_duration")
		AssetTypeColumn          = postgres.StringColumn("asset_type")
		InitialRateColumn        = postgres.FloatColumn("initial_rate")
		ContractSizeColumn       = postgres.IntegerColumn("contract_size")
		allColumns               = postgres.ColumnList{IDColumn, SymbolIDColumn, InvestorIDColumn, AccountNoColumn, LoanRateColumn, LimitAmountColumn, TypeColumn, StatusColumn, CreatedAtColumn, UpdatedAtColumn, GuaranteedDurationColumn, AssetTypeColumn, InitialRateColumn, ContractSizeColumn}
		mutableColumns           = postgres.ColumnList{SymbolIDColumn, InvestorIDColumn, AccountNoColumn, LoanRateColumn, LimitAmountColumn, TypeColumn, StatusColumn, GuaranteedDurationColumn, AssetTypeColumn, InitialRateColumn, ContractSizeColumn}
	)

	return loanPackageRequestTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		SymbolID:           SymbolIDColumn,
		InvestorID:         InvestorIDColumn,
		AccountNo:          AccountNoColumn,
		LoanRate:           LoanRateColumn,
		LimitAmount:        LimitAmountColumn,
		Type:               TypeColumn,
		Status:             StatusColumn,
		CreatedAt:          CreatedAtColumn,
		UpdatedAt:          UpdatedAtColumn,
		GuaranteedDuration: GuaranteedDurationColumn,
		AssetType:          AssetTypeColumn,
		InitialRate:        InitialRateColumn,
		ContractSize:       ContractSizeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
