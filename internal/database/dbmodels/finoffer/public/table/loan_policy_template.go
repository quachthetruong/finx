//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var LoanPolicyTemplate = newLoanPolicyTemplateTable("public", "loan_policy_template", "")

type loanPolicyTemplateTable struct {
	postgres.Table

	// Columns
	ID                       postgres.ColumnInteger
	CreatedAt                postgres.ColumnTimestamp
	UpdatedAt                postgres.ColumnTimestamp
	UpdatedBy                postgres.ColumnString
	Name                     postgres.ColumnString
	InterestRate             postgres.ColumnFloat
	InterestBasis            postgres.ColumnInteger
	Term                     postgres.ColumnInteger
	PoolIDRef                postgres.ColumnInteger
	OverdueInterest          postgres.ColumnFloat
	AllowExtendLoanTerm      postgres.ColumnBool
	AllowEarlyPayment        postgres.ColumnBool
	PreferentialPeriod       postgres.ColumnInteger
	PreferentialInterestRate postgres.ColumnFloat

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type LoanPolicyTemplateTable struct {
	loanPolicyTemplateTable

	EXCLUDED loanPolicyTemplateTable
}

// AS creates new LoanPolicyTemplateTable with assigned alias
func (a LoanPolicyTemplateTable) AS(alias string) *LoanPolicyTemplateTable {
	return newLoanPolicyTemplateTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LoanPolicyTemplateTable with assigned schema name
func (a LoanPolicyTemplateTable) FromSchema(schemaName string) *LoanPolicyTemplateTable {
	return newLoanPolicyTemplateTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LoanPolicyTemplateTable with assigned table prefix
func (a LoanPolicyTemplateTable) WithPrefix(prefix string) *LoanPolicyTemplateTable {
	return newLoanPolicyTemplateTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LoanPolicyTemplateTable with assigned table suffix
func (a LoanPolicyTemplateTable) WithSuffix(suffix string) *LoanPolicyTemplateTable {
	return newLoanPolicyTemplateTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLoanPolicyTemplateTable(schemaName, tableName, alias string) *LoanPolicyTemplateTable {
	return &LoanPolicyTemplateTable{
		loanPolicyTemplateTable: newLoanPolicyTemplateTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newLoanPolicyTemplateTableImpl("", "excluded", ""),
	}
}

func newLoanPolicyTemplateTableImpl(schemaName, tableName, alias string) loanPolicyTemplateTable {
	var (
		IDColumn                       = postgres.IntegerColumn("id")
		CreatedAtColumn                = postgres.TimestampColumn("created_at")
		UpdatedAtColumn                = postgres.TimestampColumn("updated_at")
		UpdatedByColumn                = postgres.StringColumn("updated_by")
		NameColumn                     = postgres.StringColumn("name")
		InterestRateColumn             = postgres.FloatColumn("interest_rate")
		InterestBasisColumn            = postgres.IntegerColumn("interest_basis")
		TermColumn                     = postgres.IntegerColumn("term")
		PoolIDRefColumn                = postgres.IntegerColumn("pool_id_ref")
		OverdueInterestColumn          = postgres.FloatColumn("overdue_interest")
		AllowExtendLoanTermColumn      = postgres.BoolColumn("allow_extend_loan_term")
		AllowEarlyPaymentColumn        = postgres.BoolColumn("allow_early_payment")
		PreferentialPeriodColumn       = postgres.IntegerColumn("preferential_period")
		PreferentialInterestRateColumn = postgres.FloatColumn("preferential_interest_rate")
		allColumns                     = postgres.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, UpdatedByColumn, NameColumn, InterestRateColumn, InterestBasisColumn, TermColumn, PoolIDRefColumn, OverdueInterestColumn, AllowExtendLoanTermColumn, AllowEarlyPaymentColumn, PreferentialPeriodColumn, PreferentialInterestRateColumn}
		mutableColumns                 = postgres.ColumnList{UpdatedByColumn, NameColumn, InterestRateColumn, InterestBasisColumn, TermColumn, PoolIDRefColumn, OverdueInterestColumn, AllowExtendLoanTermColumn, AllowEarlyPaymentColumn, PreferentialPeriodColumn, PreferentialInterestRateColumn}
	)

	return loanPolicyTemplateTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                       IDColumn,
		CreatedAt:                CreatedAtColumn,
		UpdatedAt:                UpdatedAtColumn,
		UpdatedBy:                UpdatedByColumn,
		Name:                     NameColumn,
		InterestRate:             InterestRateColumn,
		InterestBasis:            InterestBasisColumn,
		Term:                     TermColumn,
		PoolIDRef:                PoolIDRefColumn,
		OverdueInterest:          OverdueInterestColumn,
		AllowExtendLoanTerm:      AllowExtendLoanTermColumn,
		AllowEarlyPayment:        AllowEarlyPaymentColumn,
		PreferentialPeriod:       PreferentialPeriodColumn,
		PreferentialInterestRate: PreferentialInterestRateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
