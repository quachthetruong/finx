//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var OfflineOfferUpdate = newOfflineOfferUpdateTable("public", "offline_offer_update", "")

type offlineOfferUpdateTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnInteger
	OfferID   postgres.ColumnInteger
	Status    postgres.ColumnString
	Category  postgres.ColumnString
	Note      postgres.ColumnString
	CreatedBy postgres.ColumnString
	CreatedAt postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type OfflineOfferUpdateTable struct {
	offlineOfferUpdateTable

	EXCLUDED offlineOfferUpdateTable
}

// AS creates new OfflineOfferUpdateTable with assigned alias
func (a OfflineOfferUpdateTable) AS(alias string) *OfflineOfferUpdateTable {
	return newOfflineOfferUpdateTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new OfflineOfferUpdateTable with assigned schema name
func (a OfflineOfferUpdateTable) FromSchema(schemaName string) *OfflineOfferUpdateTable {
	return newOfflineOfferUpdateTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new OfflineOfferUpdateTable with assigned table prefix
func (a OfflineOfferUpdateTable) WithPrefix(prefix string) *OfflineOfferUpdateTable {
	return newOfflineOfferUpdateTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new OfflineOfferUpdateTable with assigned table suffix
func (a OfflineOfferUpdateTable) WithSuffix(suffix string) *OfflineOfferUpdateTable {
	return newOfflineOfferUpdateTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newOfflineOfferUpdateTable(schemaName, tableName, alias string) *OfflineOfferUpdateTable {
	return &OfflineOfferUpdateTable{
		offlineOfferUpdateTable: newOfflineOfferUpdateTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newOfflineOfferUpdateTableImpl("", "excluded", ""),
	}
}

func newOfflineOfferUpdateTableImpl(schemaName, tableName, alias string) offlineOfferUpdateTable {
	var (
		IDColumn        = postgres.IntegerColumn("id")
		OfferIDColumn   = postgres.IntegerColumn("offer_id")
		StatusColumn    = postgres.StringColumn("status")
		CategoryColumn  = postgres.StringColumn("category")
		NoteColumn      = postgres.StringColumn("note")
		CreatedByColumn = postgres.StringColumn("created_by")
		CreatedAtColumn = postgres.TimestampColumn("created_at")
		allColumns      = postgres.ColumnList{IDColumn, OfferIDColumn, StatusColumn, CategoryColumn, NoteColumn, CreatedByColumn, CreatedAtColumn}
		mutableColumns  = postgres.ColumnList{OfferIDColumn, StatusColumn, CategoryColumn, NoteColumn, CreatedByColumn}
	)

	return offlineOfferUpdateTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		OfferID:   OfferIDColumn,
		Status:    StatusColumn,
		Category:  CategoryColumn,
		Note:      NoteColumn,
		CreatedBy: CreatedByColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
