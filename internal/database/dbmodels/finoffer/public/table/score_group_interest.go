//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ScoreGroupInterest = newScoreGroupInterestTable("public", "score_group_interest", "")

type scoreGroupInterestTable struct {
	postgres.Table

	// Columns
	ID           postgres.ColumnInteger
	LimitAmount  postgres.ColumnFloat
	LoanRate     postgres.ColumnFloat
	InterestRate postgres.ColumnFloat
	ScoreGroupID postgres.ColumnInteger
	CreatedAt    postgres.ColumnTimestamp
	UpdatedAt    postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ScoreGroupInterestTable struct {
	scoreGroupInterestTable

	EXCLUDED scoreGroupInterestTable
}

// AS creates new ScoreGroupInterestTable with assigned alias
func (a ScoreGroupInterestTable) AS(alias string) *ScoreGroupInterestTable {
	return newScoreGroupInterestTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ScoreGroupInterestTable with assigned schema name
func (a ScoreGroupInterestTable) FromSchema(schemaName string) *ScoreGroupInterestTable {
	return newScoreGroupInterestTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ScoreGroupInterestTable with assigned table prefix
func (a ScoreGroupInterestTable) WithPrefix(prefix string) *ScoreGroupInterestTable {
	return newScoreGroupInterestTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ScoreGroupInterestTable with assigned table suffix
func (a ScoreGroupInterestTable) WithSuffix(suffix string) *ScoreGroupInterestTable {
	return newScoreGroupInterestTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newScoreGroupInterestTable(schemaName, tableName, alias string) *ScoreGroupInterestTable {
	return &ScoreGroupInterestTable{
		scoreGroupInterestTable: newScoreGroupInterestTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newScoreGroupInterestTableImpl("", "excluded", ""),
	}
}

func newScoreGroupInterestTableImpl(schemaName, tableName, alias string) scoreGroupInterestTable {
	var (
		IDColumn           = postgres.IntegerColumn("id")
		LimitAmountColumn  = postgres.FloatColumn("limit_amount")
		LoanRateColumn     = postgres.FloatColumn("loan_rate")
		InterestRateColumn = postgres.FloatColumn("interest_rate")
		ScoreGroupIDColumn = postgres.IntegerColumn("score_group_id")
		CreatedAtColumn    = postgres.TimestampColumn("created_at")
		UpdatedAtColumn    = postgres.TimestampColumn("updated_at")
		allColumns         = postgres.ColumnList{IDColumn, LimitAmountColumn, LoanRateColumn, InterestRateColumn, ScoreGroupIDColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns     = postgres.ColumnList{LimitAmountColumn, LoanRateColumn, InterestRateColumn, ScoreGroupIDColumn}
	)

	return scoreGroupInterestTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		LimitAmount:  LimitAmountColumn,
		LoanRate:     LoanRateColumn,
		InterestRate: InterestRateColumn,
		ScoreGroupID: ScoreGroupIDColumn,
		CreatedAt:    CreatedAtColumn,
		UpdatedAt:    UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
