//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SubmissionSheetMetadata = newSubmissionSheetMetadataTable("public", "submission_sheet_metadata", "")

type submissionSheetMetadataTable struct {
	postgres.Table

	// Columns
	ID                   postgres.ColumnInteger
	LoanPackageRequestID postgres.ColumnInteger
	Status               postgres.ColumnString
	Creator              postgres.ColumnString
	ActionType           postgres.ColumnString
	FlowType             postgres.ColumnString
	ProposeType          postgres.ColumnString
	CreatedAt            postgres.ColumnTimestamp
	UpdatedAt            postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SubmissionSheetMetadataTable struct {
	submissionSheetMetadataTable

	EXCLUDED submissionSheetMetadataTable
}

// AS creates new SubmissionSheetMetadataTable with assigned alias
func (a SubmissionSheetMetadataTable) AS(alias string) *SubmissionSheetMetadataTable {
	return newSubmissionSheetMetadataTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SubmissionSheetMetadataTable with assigned schema name
func (a SubmissionSheetMetadataTable) FromSchema(schemaName string) *SubmissionSheetMetadataTable {
	return newSubmissionSheetMetadataTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SubmissionSheetMetadataTable with assigned table prefix
func (a SubmissionSheetMetadataTable) WithPrefix(prefix string) *SubmissionSheetMetadataTable {
	return newSubmissionSheetMetadataTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SubmissionSheetMetadataTable with assigned table suffix
func (a SubmissionSheetMetadataTable) WithSuffix(suffix string) *SubmissionSheetMetadataTable {
	return newSubmissionSheetMetadataTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSubmissionSheetMetadataTable(schemaName, tableName, alias string) *SubmissionSheetMetadataTable {
	return &SubmissionSheetMetadataTable{
		submissionSheetMetadataTable: newSubmissionSheetMetadataTableImpl(schemaName, tableName, alias),
		EXCLUDED:                     newSubmissionSheetMetadataTableImpl("", "excluded", ""),
	}
}

func newSubmissionSheetMetadataTableImpl(schemaName, tableName, alias string) submissionSheetMetadataTable {
	var (
		IDColumn                   = postgres.IntegerColumn("id")
		LoanPackageRequestIDColumn = postgres.IntegerColumn("loan_package_request_id")
		StatusColumn               = postgres.StringColumn("status")
		CreatorColumn              = postgres.StringColumn("creator")
		ActionTypeColumn           = postgres.StringColumn("action_type")
		FlowTypeColumn             = postgres.StringColumn("flow_type")
		ProposeTypeColumn          = postgres.StringColumn("propose_type")
		CreatedAtColumn            = postgres.TimestampColumn("created_at")
		UpdatedAtColumn            = postgres.TimestampColumn("updated_at")
		allColumns                 = postgres.ColumnList{IDColumn, LoanPackageRequestIDColumn, StatusColumn, CreatorColumn, ActionTypeColumn, FlowTypeColumn, ProposeTypeColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns             = postgres.ColumnList{LoanPackageRequestIDColumn, StatusColumn, CreatorColumn, ActionTypeColumn, FlowTypeColumn, ProposeTypeColumn}
	)

	return submissionSheetMetadataTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                   IDColumn,
		LoanPackageRequestID: LoanPackageRequestIDColumn,
		Status:               StatusColumn,
		Creator:              CreatorColumn,
		ActionType:           ActionTypeColumn,
		FlowType:             FlowTypeColumn,
		ProposeType:          ProposeTypeColumn,
		CreatedAt:            CreatedAtColumn,
		UpdatedAt:            UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
