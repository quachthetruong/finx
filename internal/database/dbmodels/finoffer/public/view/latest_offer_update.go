//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var LatestOfferUpdate = newLatestOfferUpdateTable("public", "latest_offer_update", "")

type latestOfferUpdateTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnInteger
	OfferID   postgres.ColumnInteger
	Status    postgres.ColumnString
	Category  postgres.ColumnString
	Note      postgres.ColumnString
	CreatedBy postgres.ColumnString
	CreatedAt postgres.ColumnTimestamp
	Rn        postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type LatestOfferUpdateTable struct {
	latestOfferUpdateTable

	EXCLUDED latestOfferUpdateTable
}

// AS creates new LatestOfferUpdateTable with assigned alias
func (a LatestOfferUpdateTable) AS(alias string) *LatestOfferUpdateTable {
	return newLatestOfferUpdateTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LatestOfferUpdateTable with assigned schema name
func (a LatestOfferUpdateTable) FromSchema(schemaName string) *LatestOfferUpdateTable {
	return newLatestOfferUpdateTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LatestOfferUpdateTable with assigned table prefix
func (a LatestOfferUpdateTable) WithPrefix(prefix string) *LatestOfferUpdateTable {
	return newLatestOfferUpdateTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LatestOfferUpdateTable with assigned table suffix
func (a LatestOfferUpdateTable) WithSuffix(suffix string) *LatestOfferUpdateTable {
	return newLatestOfferUpdateTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLatestOfferUpdateTable(schemaName, tableName, alias string) *LatestOfferUpdateTable {
	return &LatestOfferUpdateTable{
		latestOfferUpdateTable: newLatestOfferUpdateTableImpl(schemaName, tableName, alias),
		EXCLUDED:               newLatestOfferUpdateTableImpl("", "excluded", ""),
	}
}

func newLatestOfferUpdateTableImpl(schemaName, tableName, alias string) latestOfferUpdateTable {
	var (
		IDColumn        = postgres.IntegerColumn("id")
		OfferIDColumn   = postgres.IntegerColumn("offer_id")
		StatusColumn    = postgres.StringColumn("status")
		CategoryColumn  = postgres.StringColumn("category")
		NoteColumn      = postgres.StringColumn("note")
		CreatedByColumn = postgres.StringColumn("created_by")
		CreatedAtColumn = postgres.TimestampColumn("created_at")
		RnColumn        = postgres.IntegerColumn("rn")
		allColumns      = postgres.ColumnList{IDColumn, OfferIDColumn, StatusColumn, CategoryColumn, NoteColumn, CreatedByColumn, CreatedAtColumn, RnColumn}
		mutableColumns  = postgres.ColumnList{IDColumn, OfferIDColumn, StatusColumn, CategoryColumn, NoteColumn, CreatedByColumn, CreatedAtColumn, RnColumn}
	)

	return latestOfferUpdateTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		OfferID:   OfferIDColumn,
		Status:    StatusColumn,
		Category:  CategoryColumn,
		Note:      NoteColumn,
		CreatedBy: CreatedByColumn,
		CreatedAt: CreatedAtColumn,
		Rn:        RnColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
