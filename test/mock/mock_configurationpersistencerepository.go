// Code generated by mockery v2.42.2. DO NOT EDIT.

package mock

import (
	context "context"
	entity "financing-offer/internal/core/entity"

	mock "github.com/stretchr/testify/mock"
)

// MockConfigurationPersistenceRepository is an autogenerated mock type for the ConfigurationPersistenceRepository type
type MockConfigurationPersistenceRepository struct {
	mock.Mock
}

type MockConfigurationPersistenceRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConfigurationPersistenceRepository) EXPECT() *MockConfigurationPersistenceRepository_Expecter {
	return &MockConfigurationPersistenceRepository_Expecter{mock: &_m.Mock}
}

// GetLoanRateConfiguration provides a mock function with given fields: ctx
func (_m *MockConfigurationPersistenceRepository) GetLoanRateConfiguration(ctx context.Context) (entity.LoanRateConfiguration, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetLoanRateConfiguration")
	}

	var r0 entity.LoanRateConfiguration
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (entity.LoanRateConfiguration, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) entity.LoanRateConfiguration); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(entity.LoanRateConfiguration)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockConfigurationPersistenceRepository_GetLoanRateConfiguration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetLoanRateConfiguration'
type MockConfigurationPersistenceRepository_GetLoanRateConfiguration_Call struct {
	*mock.Call
}

// GetLoanRateConfiguration is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockConfigurationPersistenceRepository_Expecter) GetLoanRateConfiguration(ctx interface{}) *MockConfigurationPersistenceRepository_GetLoanRateConfiguration_Call {
	return &MockConfigurationPersistenceRepository_GetLoanRateConfiguration_Call{Call: _e.mock.On("GetLoanRateConfiguration", ctx)}
}

func (_c *MockConfigurationPersistenceRepository_GetLoanRateConfiguration_Call) Run(run func(ctx context.Context)) *MockConfigurationPersistenceRepository_GetLoanRateConfiguration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockConfigurationPersistenceRepository_GetLoanRateConfiguration_Call) Return(_a0 entity.LoanRateConfiguration, _a1 error) *MockConfigurationPersistenceRepository_GetLoanRateConfiguration_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockConfigurationPersistenceRepository_GetLoanRateConfiguration_Call) RunAndReturn(run func(context.Context) (entity.LoanRateConfiguration, error)) *MockConfigurationPersistenceRepository_GetLoanRateConfiguration_Call {
	_c.Call.Return(run)
	return _c
}

// GetMarginPoolConfiguration provides a mock function with given fields: ctx
func (_m *MockConfigurationPersistenceRepository) GetMarginPoolConfiguration(ctx context.Context) (entity.MarginPoolConfiguration, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetMarginPoolConfiguration")
	}

	var r0 entity.MarginPoolConfiguration
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (entity.MarginPoolConfiguration, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) entity.MarginPoolConfiguration); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(entity.MarginPoolConfiguration)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockConfigurationPersistenceRepository_GetMarginPoolConfiguration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMarginPoolConfiguration'
type MockConfigurationPersistenceRepository_GetMarginPoolConfiguration_Call struct {
	*mock.Call
}

// GetMarginPoolConfiguration is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockConfigurationPersistenceRepository_Expecter) GetMarginPoolConfiguration(ctx interface{}) *MockConfigurationPersistenceRepository_GetMarginPoolConfiguration_Call {
	return &MockConfigurationPersistenceRepository_GetMarginPoolConfiguration_Call{Call: _e.mock.On("GetMarginPoolConfiguration", ctx)}
}

func (_c *MockConfigurationPersistenceRepository_GetMarginPoolConfiguration_Call) Run(run func(ctx context.Context)) *MockConfigurationPersistenceRepository_GetMarginPoolConfiguration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockConfigurationPersistenceRepository_GetMarginPoolConfiguration_Call) Return(_a0 entity.MarginPoolConfiguration, _a1 error) *MockConfigurationPersistenceRepository_GetMarginPoolConfiguration_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockConfigurationPersistenceRepository_GetMarginPoolConfiguration_Call) RunAndReturn(run func(context.Context) (entity.MarginPoolConfiguration, error)) *MockConfigurationPersistenceRepository_GetMarginPoolConfiguration_Call {
	_c.Call.Return(run)
	return _c
}

// GetPromotionConfiguration provides a mock function with given fields: ctx
func (_m *MockConfigurationPersistenceRepository) GetPromotionConfiguration(ctx context.Context) (entity.PromotionLoanPackage, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetPromotionConfiguration")
	}

	var r0 entity.PromotionLoanPackage
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (entity.PromotionLoanPackage, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) entity.PromotionLoanPackage); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(entity.PromotionLoanPackage)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockConfigurationPersistenceRepository_GetPromotionConfiguration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPromotionConfiguration'
type MockConfigurationPersistenceRepository_GetPromotionConfiguration_Call struct {
	*mock.Call
}

// GetPromotionConfiguration is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockConfigurationPersistenceRepository_Expecter) GetPromotionConfiguration(ctx interface{}) *MockConfigurationPersistenceRepository_GetPromotionConfiguration_Call {
	return &MockConfigurationPersistenceRepository_GetPromotionConfiguration_Call{Call: _e.mock.On("GetPromotionConfiguration", ctx)}
}

func (_c *MockConfigurationPersistenceRepository_GetPromotionConfiguration_Call) Run(run func(ctx context.Context)) *MockConfigurationPersistenceRepository_GetPromotionConfiguration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockConfigurationPersistenceRepository_GetPromotionConfiguration_Call) Return(_a0 entity.PromotionLoanPackage, _a1 error) *MockConfigurationPersistenceRepository_GetPromotionConfiguration_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockConfigurationPersistenceRepository_GetPromotionConfiguration_Call) RunAndReturn(run func(context.Context) (entity.PromotionLoanPackage, error)) *MockConfigurationPersistenceRepository_GetPromotionConfiguration_Call {
	_c.Call.Return(run)
	return _c
}

// GetSubmissionDefault provides a mock function with given fields: ctx
func (_m *MockConfigurationPersistenceRepository) GetSubmissionDefault(ctx context.Context) (entity.SubmissionDefault, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetSubmissionDefault")
	}

	var r0 entity.SubmissionDefault
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (entity.SubmissionDefault, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) entity.SubmissionDefault); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(entity.SubmissionDefault)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockConfigurationPersistenceRepository_GetSubmissionDefault_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSubmissionDefault'
type MockConfigurationPersistenceRepository_GetSubmissionDefault_Call struct {
	*mock.Call
}

// GetSubmissionDefault is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockConfigurationPersistenceRepository_Expecter) GetSubmissionDefault(ctx interface{}) *MockConfigurationPersistenceRepository_GetSubmissionDefault_Call {
	return &MockConfigurationPersistenceRepository_GetSubmissionDefault_Call{Call: _e.mock.On("GetSubmissionDefault", ctx)}
}

func (_c *MockConfigurationPersistenceRepository_GetSubmissionDefault_Call) Run(run func(ctx context.Context)) *MockConfigurationPersistenceRepository_GetSubmissionDefault_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockConfigurationPersistenceRepository_GetSubmissionDefault_Call) Return(_a0 entity.SubmissionDefault, _a1 error) *MockConfigurationPersistenceRepository_GetSubmissionDefault_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockConfigurationPersistenceRepository_GetSubmissionDefault_Call) RunAndReturn(run func(context.Context) (entity.SubmissionDefault, error)) *MockConfigurationPersistenceRepository_GetSubmissionDefault_Call {
	_c.Call.Return(run)
	return _c
}

// SetLoanRateConfiguration provides a mock function with given fields: ctx, loanRate, updater
func (_m *MockConfigurationPersistenceRepository) SetLoanRateConfiguration(ctx context.Context, loanRate entity.LoanRateConfiguration, updater string) error {
	ret := _m.Called(ctx, loanRate, updater)

	if len(ret) == 0 {
		panic("no return value specified for SetLoanRateConfiguration")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.LoanRateConfiguration, string) error); ok {
		r0 = rf(ctx, loanRate, updater)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockConfigurationPersistenceRepository_SetLoanRateConfiguration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetLoanRateConfiguration'
type MockConfigurationPersistenceRepository_SetLoanRateConfiguration_Call struct {
	*mock.Call
}

// SetLoanRateConfiguration is a helper method to define mock.On call
//   - ctx context.Context
//   - loanRate entity.LoanRateConfiguration
//   - updater string
func (_e *MockConfigurationPersistenceRepository_Expecter) SetLoanRateConfiguration(ctx interface{}, loanRate interface{}, updater interface{}) *MockConfigurationPersistenceRepository_SetLoanRateConfiguration_Call {
	return &MockConfigurationPersistenceRepository_SetLoanRateConfiguration_Call{Call: _e.mock.On("SetLoanRateConfiguration", ctx, loanRate, updater)}
}

func (_c *MockConfigurationPersistenceRepository_SetLoanRateConfiguration_Call) Run(run func(ctx context.Context, loanRate entity.LoanRateConfiguration, updater string)) *MockConfigurationPersistenceRepository_SetLoanRateConfiguration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(entity.LoanRateConfiguration), args[2].(string))
	})
	return _c
}

func (_c *MockConfigurationPersistenceRepository_SetLoanRateConfiguration_Call) Return(_a0 error) *MockConfigurationPersistenceRepository_SetLoanRateConfiguration_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfigurationPersistenceRepository_SetLoanRateConfiguration_Call) RunAndReturn(run func(context.Context, entity.LoanRateConfiguration, string) error) *MockConfigurationPersistenceRepository_SetLoanRateConfiguration_Call {
	_c.Call.Return(run)
	return _c
}

// SetMarginPoolConfiguration provides a mock function with given fields: ctx, marginPool, updater
func (_m *MockConfigurationPersistenceRepository) SetMarginPoolConfiguration(ctx context.Context, marginPool entity.MarginPoolConfiguration, updater string) error {
	ret := _m.Called(ctx, marginPool, updater)

	if len(ret) == 0 {
		panic("no return value specified for SetMarginPoolConfiguration")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.MarginPoolConfiguration, string) error); ok {
		r0 = rf(ctx, marginPool, updater)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockConfigurationPersistenceRepository_SetMarginPoolConfiguration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetMarginPoolConfiguration'
type MockConfigurationPersistenceRepository_SetMarginPoolConfiguration_Call struct {
	*mock.Call
}

// SetMarginPoolConfiguration is a helper method to define mock.On call
//   - ctx context.Context
//   - marginPool entity.MarginPoolConfiguration
//   - updater string
func (_e *MockConfigurationPersistenceRepository_Expecter) SetMarginPoolConfiguration(ctx interface{}, marginPool interface{}, updater interface{}) *MockConfigurationPersistenceRepository_SetMarginPoolConfiguration_Call {
	return &MockConfigurationPersistenceRepository_SetMarginPoolConfiguration_Call{Call: _e.mock.On("SetMarginPoolConfiguration", ctx, marginPool, updater)}
}

func (_c *MockConfigurationPersistenceRepository_SetMarginPoolConfiguration_Call) Run(run func(ctx context.Context, marginPool entity.MarginPoolConfiguration, updater string)) *MockConfigurationPersistenceRepository_SetMarginPoolConfiguration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(entity.MarginPoolConfiguration), args[2].(string))
	})
	return _c
}

func (_c *MockConfigurationPersistenceRepository_SetMarginPoolConfiguration_Call) Return(_a0 error) *MockConfigurationPersistenceRepository_SetMarginPoolConfiguration_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfigurationPersistenceRepository_SetMarginPoolConfiguration_Call) RunAndReturn(run func(context.Context, entity.MarginPoolConfiguration, string) error) *MockConfigurationPersistenceRepository_SetMarginPoolConfiguration_Call {
	_c.Call.Return(run)
	return _c
}

// SetPromotionConfiguration provides a mock function with given fields: ctx, promotionLoanPackage, updater
func (_m *MockConfigurationPersistenceRepository) SetPromotionConfiguration(ctx context.Context, promotionLoanPackage entity.PromotionLoanPackage, updater string) error {
	ret := _m.Called(ctx, promotionLoanPackage, updater)

	if len(ret) == 0 {
		panic("no return value specified for SetPromotionConfiguration")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.PromotionLoanPackage, string) error); ok {
		r0 = rf(ctx, promotionLoanPackage, updater)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockConfigurationPersistenceRepository_SetPromotionConfiguration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetPromotionConfiguration'
type MockConfigurationPersistenceRepository_SetPromotionConfiguration_Call struct {
	*mock.Call
}

// SetPromotionConfiguration is a helper method to define mock.On call
//   - ctx context.Context
//   - promotionLoanPackage entity.PromotionLoanPackage
//   - updater string
func (_e *MockConfigurationPersistenceRepository_Expecter) SetPromotionConfiguration(ctx interface{}, promotionLoanPackage interface{}, updater interface{}) *MockConfigurationPersistenceRepository_SetPromotionConfiguration_Call {
	return &MockConfigurationPersistenceRepository_SetPromotionConfiguration_Call{Call: _e.mock.On("SetPromotionConfiguration", ctx, promotionLoanPackage, updater)}
}

func (_c *MockConfigurationPersistenceRepository_SetPromotionConfiguration_Call) Run(run func(ctx context.Context, promotionLoanPackage entity.PromotionLoanPackage, updater string)) *MockConfigurationPersistenceRepository_SetPromotionConfiguration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(entity.PromotionLoanPackage), args[2].(string))
	})
	return _c
}

func (_c *MockConfigurationPersistenceRepository_SetPromotionConfiguration_Call) Return(_a0 error) *MockConfigurationPersistenceRepository_SetPromotionConfiguration_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfigurationPersistenceRepository_SetPromotionConfiguration_Call) RunAndReturn(run func(context.Context, entity.PromotionLoanPackage, string) error) *MockConfigurationPersistenceRepository_SetPromotionConfiguration_Call {
	_c.Call.Return(run)
	return _c
}

// SetSubmissionDefault provides a mock function with given fields: ctx, defaultValue, updater
func (_m *MockConfigurationPersistenceRepository) SetSubmissionDefault(ctx context.Context, defaultValue entity.SubmissionDefault, updater string) error {
	ret := _m.Called(ctx, defaultValue, updater)

	if len(ret) == 0 {
		panic("no return value specified for SetSubmissionDefault")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.SubmissionDefault, string) error); ok {
		r0 = rf(ctx, defaultValue, updater)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockConfigurationPersistenceRepository_SetSubmissionDefault_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetSubmissionDefault'
type MockConfigurationPersistenceRepository_SetSubmissionDefault_Call struct {
	*mock.Call
}

// SetSubmissionDefault is a helper method to define mock.On call
//   - ctx context.Context
//   - defaultValue entity.SubmissionDefault
//   - updater string
func (_e *MockConfigurationPersistenceRepository_Expecter) SetSubmissionDefault(ctx interface{}, defaultValue interface{}, updater interface{}) *MockConfigurationPersistenceRepository_SetSubmissionDefault_Call {
	return &MockConfigurationPersistenceRepository_SetSubmissionDefault_Call{Call: _e.mock.On("SetSubmissionDefault", ctx, defaultValue, updater)}
}

func (_c *MockConfigurationPersistenceRepository_SetSubmissionDefault_Call) Run(run func(ctx context.Context, defaultValue entity.SubmissionDefault, updater string)) *MockConfigurationPersistenceRepository_SetSubmissionDefault_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(entity.SubmissionDefault), args[2].(string))
	})
	return _c
}

func (_c *MockConfigurationPersistenceRepository_SetSubmissionDefault_Call) Return(_a0 error) *MockConfigurationPersistenceRepository_SetSubmissionDefault_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfigurationPersistenceRepository_SetSubmissionDefault_Call) RunAndReturn(run func(context.Context, entity.SubmissionDefault, string) error) *MockConfigurationPersistenceRepository_SetSubmissionDefault_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockConfigurationPersistenceRepository creates a new instance of MockConfigurationPersistenceRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConfigurationPersistenceRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConfigurationPersistenceRepository {
	mock := &MockConfigurationPersistenceRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
