// Code generated by mockery v2.42.2. DO NOT EDIT.

package mock

import (
	entity "financing-offer/internal/core/entity"

	mock "github.com/stretchr/testify/mock"
)

// MockOdooServiceRepository is an autogenerated mock type for the OdooServiceRepository type
type MockOdooServiceRepository struct {
	mock.Mock
}

type MockOdooServiceRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *MockOdooServiceRepository) EXPECT() *MockOdooServiceRepository_Expecter {
	return &MockOdooServiceRepository_Expecter{mock: &_m.Mock}
}

// SendLoanApprovalRequest provides a mock function with given fields: loanApprovalRequest
func (_m *MockOdooServiceRepository) SendLoanApprovalRequest(loanApprovalRequest entity.LoanApprovalRequest) error {
	ret := _m.Called(loanApprovalRequest)

	if len(ret) == 0 {
		panic("no return value specified for SendLoanApprovalRequest")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(entity.LoanApprovalRequest) error); ok {
		r0 = rf(loanApprovalRequest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockOdooServiceRepository_SendLoanApprovalRequest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendLoanApprovalRequest'
type MockOdooServiceRepository_SendLoanApprovalRequest_Call struct {
	*mock.Call
}

// SendLoanApprovalRequest is a helper method to define mock.On call
//   - loanApprovalRequest entity.LoanApprovalRequest
func (_e *MockOdooServiceRepository_Expecter) SendLoanApprovalRequest(loanApprovalRequest interface{}) *MockOdooServiceRepository_SendLoanApprovalRequest_Call {
	return &MockOdooServiceRepository_SendLoanApprovalRequest_Call{Call: _e.mock.On("SendLoanApprovalRequest", loanApprovalRequest)}
}

func (_c *MockOdooServiceRepository_SendLoanApprovalRequest_Call) Run(run func(loanApprovalRequest entity.LoanApprovalRequest)) *MockOdooServiceRepository_SendLoanApprovalRequest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(entity.LoanApprovalRequest))
	})
	return _c
}

func (_c *MockOdooServiceRepository_SendLoanApprovalRequest_Call) Return(_a0 error) *MockOdooServiceRepository_SendLoanApprovalRequest_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockOdooServiceRepository_SendLoanApprovalRequest_Call) RunAndReturn(run func(entity.LoanApprovalRequest) error) *MockOdooServiceRepository_SendLoanApprovalRequest_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockOdooServiceRepository creates a new instance of MockOdooServiceRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOdooServiceRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOdooServiceRepository {
	mock := &MockOdooServiceRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
